load_keys(){
    if [ "$keyfile" = "" ] 
    then 
        echo "keyfile not passed" 
        exit 1;
    fi


    export kid=`jq -r '.kid' ${keyfile}`
    export v=`jq -r '.private_key' ${keyfile}`
    export p=`jq -r '.public_key' ${keyfile}`
}
auth_header(){ 
    path="$1"
    method="$2"
    keyfile="$3" 
    hashAlgo="BLAKE2B-512"
    load_keys

    headers="(request-target) (created)"
    signature_headers='keyId="'$kid'",algorithm="ed25519"'



    if [ "$payload" != "" -a "$hashAlgo" != "" ]
    then 
        headers="$headers digest"
        digest=`bin/hashtool -d "$payload" -h "${hashAlgo}"`
        signature_headers="${signature_headers}"
    fi 


    created=`date "+%s"`
    signature_headers="${signature_headers},created=\"${created}\",headers=\"${headers}\""

    if [ "${digest}" != "" ]
    then
        signing_string=`printf "(request-target): ${method} ${path}\n(created): ${created}\ndigest: BLAKE-512=${digest}"`

    else
        signing_string=`printf "(request-target): ${method} ${path}\n(created): ${created}"`
    fi


    signature=`printf "${signing_string}" | bin/signertool -a Ed25519 -o sign  -v "${v}"` 

    echo "--Siging String--\n${signing_string}\n----"

    signature_headers="$signature_headers,signature=\"${signature}\""

    echo 'AUTHORIZATION: Signature '${signature_headers}''

    printf "${signing_string}" | bin/signertool -a Ed25519   -o verify  -s "$signature" -p "${p}" 
}
auth_header $@
